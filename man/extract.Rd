% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract.R
\name{extract}
\alias{extract}
\title{Create geographical extracts from an OSM file}
\usage{
extract(
  input_path,
  extent,
  output_path,
  overwrite = FALSE,
  echo_cmd = FALSE,
  echo = TRUE,
  spinner = TRUE
)
}
\arguments{
\item{input_path}{A string. The path to the OSM data/history file whose
extent should be extracted from. Please see \link{file_formats} for a list of
supported file formats.}

\item{extent}{Either a \code{POLYGON} or a \code{MULTIPOLYGON} \code{sf} object with only
one feature or a \code{bbox} object, created by \link[sf:st_bbox]{sf::st_bbox}.}

\item{output_path}{A string. The path to the file where the output should be
written to. Please see \link{file_formats} for a list of supported file formats.}

\item{overwrite}{A logical. Whether existing files should be overwritten by
the output. Defaults to \code{FALSE}.}

\item{echo_cmd}{A logical. Whether to print the Osmium command generated by
the function call to the screen. Defaults to \code{FALSE}.}

\item{echo}{A logical. Whether to print the standard output and error
generated by the Osmium call to the screen. Defaults to \code{TRUE}.}

\item{spinner}{A logical. Whether to show a reassuring spinner while the
Osmium call is being executed. Defaults to \code{TRUE}.}
}
\value{
The normalized path to the output file.
}
\description{
Creates geographical extracts from an OSM data file or an OSM history file.
The geographical extent can be given either as a bounding box or as a
(multi)polygon.
}
\examples{
\dontshow{if (identical(tolower(Sys.getenv("NOT_CRAN")), "true")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
pbf_path <- system.file("extdata/cur.osm.pbf", package = "rosmium")

file.size(pbf_path)

# buffering the pbf bounding box 4000 meters inward and using the result
# extent to extract the osm data inside it. transforming the crs because
# inward buffers only work with project crs

lines <- sf::st_read(pbf_path, layer = "lines", quiet = TRUE)
bbox <- sf::st_bbox(lines)
bbox_polygon <- sf::st_as_sf(sf::st_as_sfc(bbox))
smaller_bbox_poly <- sf::st_buffer(
  sf::st_transform(bbox_polygon, 5880),
  -4000
)
smaller_bbox_poly <- sf::st_transform(smaller_bbox_poly, 4326)

output_path <- extract(
  pbf_path,
  smaller_bbox_poly,
  tempfile(fileext = ".osm.pbf")
)

file.size(output_path)
\dontshow{\}) # examplesIf}
}
